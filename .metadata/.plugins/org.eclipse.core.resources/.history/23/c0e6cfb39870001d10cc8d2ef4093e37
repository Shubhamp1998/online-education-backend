package com.systemadmin.controller;

import java.util.List;
//import java.util.List;
import java.util.Optional;



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
//import org.springframework.web.client.RestTemplate;

import com.systemadmin.model.StudentDetails;
import com.systemadmin.repo.CropRepository;
import com.systemadmin.repo.DealerRepository;
import com.systemadmin.repo.FarmerRepository;
import com.systemadmin.model.CourseDetails;
import com.systemadmin.model.StaffDetails;

@CrossOrigin(origins="http://localhost:3000")
@RestController
@RequestMapping("/api")
public class AdminController {
	
	@Autowired
	FarmerRepository repo;
	
	@Autowired
	DealerRepository repo1;
	
	@Autowired
	CropRepository repo2;
	
	@RequestMapping(value="/farmerAll",method=RequestMethod.GET)
	public List<StudentDetails> getAllFarmerDetails(){
		return repo.findAll();
	}
	
	 @RequestMapping(value="/farmer/{id}",method=RequestMethod.GET)
	  public Optional<StudentDetails> getFarmerDetails(@PathVariable("id") String userName ) {
		//return repo.findByUserName(userName);
		 return repo.findByUserName(userName);
	  }
	
//	 @RequestMapping(value="/farmer",method=RequestMethod.GET)
//	  public Optional<FarmerDetails> getAdminDetails(@PathVariable String id) {
//		return repo.findById(id);
//	  }
	 
	 @RequestMapping(value="/addfarmer",method=RequestMethod.POST)
	  public void addFarmerDetails(@RequestBody StudentDetails crops) {
		  repo.insert(crops);
	  }
	 @RequestMapping(value="/putfarmer",method=RequestMethod.PUT)
	  public void addAdminDetails(@RequestBody StudentDetails farmers) {
	  repo.insert(farmers);
	  }
	 
	 
	 
	//**************************************************************************************************
	 

	
	 @RequestMapping(value="/farmer",method=RequestMethod.DELETE)
	  public void deleteCropDetails(@PathVariable String userName) {
	    repo.deleteById(userName);
	  }
	 
	 

	  @RequestMapping(value="/addcrop",method=RequestMethod.POST)
	  public void addCropDetails(@RequestBody CourseDetails crops) {
		  repo2.insert(crops);
	  }

	  @RequestMapping(value="/crop/{id}",method=RequestMethod.PUT)
	  public void updateCropsDetails(@PathVariable String id, @RequestBody CourseDetails crops) {
		  repo2.save(crops);
	  }
	  

	  @RequestMapping(value="/crop/{id}",method=RequestMethod.DELETE)
	  public void deleteCropsDetails(@PathVariable String id) {
	    repo2.deleteById(id);
	  }
	  
	  
	//**************************************************************************************************
	  @GetMapping("staff/{staffId}")
	  public Optional<StaffDetails> getDealersDetails(@PathVariable Long DealerId) {
		return repo1.findByDealerId(DealerId);
	  }

	  @PostMapping("/addStaff")
	  public void addDealersDetails(@RequestBody StaffDetails dealers) {
		  repo1.insert(dealers);
	  }

	  @PutMapping("/staff/{staffId}")
	  public void updateDealersDetails(@PathVariable String DealerId, @RequestBody StaffDetails dealers) {
		  repo1.save(dealers);
	  }

	  @DeleteMapping("staff/{staffId}")
	  public void deleteDealersDetails(@PathVariable ("DealerId") Long DealerId) {
	    repo1.deleteById(DealerId);
	  }
}